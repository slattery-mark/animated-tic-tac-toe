/* -------------------- */
/* Properties/Resets    */
/* -------------------- */
:root {
    --ff-site: "Barlow", sans-serif;

    --fs-board: clamp(1rem, 11vmin + 1rem, 5.5rem);
    --fs-banner: 1.25rem;

    --secondary-clr: 0 0% 100%;
    --primary-clr: 227 16% 85%;
    --accent-clr: 211 26% 63%;

    --board-border-radius: 15px;
    --board-border-size: min(3vmin, 18px);
    --board-border: var(--board-border-size) solid hsl(var(--primary-clr) );

    --total-anim-duration: 1s;
}

/* Remove animations for people who've turned them off (accessibility) */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

body {
    display: grid;
    font-family: var(--ff-site);
    grid-template-rows: min-content 1fr min-content;
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

button {
    background: none;
    border: none;
    font: inherit;
}

main {
    align-items: center;
    background-color: hsl( var(--primary-clr) );
    display: flex;
    flex-direction: column;
    gap: 5rem;
    justify-content: center;
}

ul {
    margin: 0;
    padding: 0;
}

/* -------------------- */
/* Structure            */
/* -------------------- */

.banner {
    display: flex;
    align-items: center;
    height: 3rem;
}

.board {
    aspect-ratio: 1;
    border-radius: var(--board-border-radius);
    display: grid;
    gap: var(--board-border-size);
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    height: min(70vmin, 500px);
    position: relative;
}

.board__cell {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 15%;
    overflow: hidden;
}

.board__cell[disabled] {
    cursor: initial;
    pointer-events: none;
}

.board__symbol {
    height: auto;
    width: 80%;
}

.board__line {
    height: auto;
    position: absolute;
    width: 90%;
}

.board__line--row {
    left: 15%;
    top: calc(15% * var(--position-multiplier));
}

.board__line--col {
    left: calc(15% * var(--position-multiplier));
    transform: rotate(90deg);
    top: 15%;
}

.board__line--diag {
    transform: calc(rotate(45deg) * var(--position-multiplier));
    top: 15%;
    left: 15%;
}

.horizontal-list {
    display: flex;
    flex-direction: row;
    gap: 2rem;
}

/* .btn {
    border-radius: 1.5rem;
    height: min-content;
    padding: 20px;
    font-weight: bold;
    letter-spacing: .15rem;
    width: min-content;
} */

/* -------------------- */
/* Style                */
/* -------------------- */

.banner {
    background-color: hsl( var(--accent-clr) );
    color: hsl( var(--secondary-clr) );
}

/* tic tac toe board borders */
.board {
    background-color: hsl( var(--secondary-clr) );
    font-family: var(--ff-board);
    font-size: var(--fs-board);
    font-weight: bold;
}

.board__cell {
    outline: var(--board-border);
}

.horizontal-list {
    list-style-type: none;
}

/* .btn__text-link {
    background-color: hsl( var(--accent-clr) );
    color: hsl( var(--secondary-clr) );
    font-size: 1.5rem;
    white-space: nowrap;
} */

/* -------------------- */
/* Animations           */
/* -------------------- */

.expand {
    animation: expand 1s ease-in-out var(--total-anim-duration) infinite normal;
}

.retract {
    animation: retract 1.5s ease-in-out var(--total-anim-duration) 1 normal forwards;
}

/* requires JS defined --shape-length and --delay=multiplier */
.drawn {
    --piece-anim-duration: calc(var(--total-anim-duration) / var(--shape-pieces));
    stroke-dasharray: var(--shape-length);
    stroke-dashoffset: var(--shape-length);
    animation-name: draw;
    animation-duration: var(--piece-anim-duration);
    animation-timing-function: ease-in-out;
    animation-delay: calc(var(--delay-multiplier) * var(--piece-anim-duration));
    animation-fill-mode: forwards;
}

@keyframes expand {
    0% {
        transform: scale(1);
    }
    
    50% {
        transform: scale(1.25);
    }
}

@keyframes retract {
    0% {
        transform: scale(1);
    }
    
    100% {
        transform: scale(.75);
    }
}

@keyframes draw {
    from {
        stroke-dashoffset: var(--shape-length);
    }

    to {
        stroke-dashoffset: 0;
    }
}