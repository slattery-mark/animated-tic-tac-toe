/* -------------------- */
/* Properties/Resets    */
/* -------------------- */
:root {
    --ff-site: Arial, sans-serif;

    --fs-board: clamp(1rem, 11vmin + 1rem, 5.5rem);
    --fs-banner: 1.25rem;

    --secondary-clr: 0 0% 100%;
    --primary-clr: 227 16% 85%;
    --accent-clr: 211 26% 63%;

    --board-border-radius: 15px;
    --board-border-size: min(3vmin, 18px);
    --board-border: var(--board-border-size) solid hsl(var(--primary-clr) );

    --total-anim-duration: 1s;

    --current-symbol: url("/assets/x-symbol.svg");
}

/* Remove animations for people who've turned them off (accessibility) */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

body {
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

button {
    background: none;
    border: none;
    font: inherit;
}

ul {
    margin: 0;
    padding: 0;
}

/* -------------------- */
/* Layout               */
/* -------------------- */

.l-two-row-grid {
    display: grid;
    grid-template-rows: 1fr min-content;
}

.l-flex-center {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/* -------------------- */
/* Modules              */
/* -------------------- */

.horizontal-list {
    display: flex;
    flex-direction: row;
    gap: 2rem;
    list-style: none;
}

.banner {
    font-size: 2rem;
}

.board {
    aspect-ratio: 1;
    border-radius: var(--board-border-radius);
    display: grid;
    gap: var(--board-border-size);
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    height: min(50vmin, 500px);
    position: relative;
}

.board__cell {
    background-position: center;
    background-repeat: no-repeat;
    background-size: 55%;
    cursor: pointer;
    padding: 15%;
    position: relative;
}

@media (hover: hover) {
    .board__cell:hover {
        background-image: var(--current-symbol);
    }
}

.board__cell[disabled] {
    cursor: initial;
    pointer-events: none;
}

.board__symbol {
    height: auto;
    width: 80%;
}

.board__line {
    height: auto;
    position: absolute;
    width: 90%;
}

.board__line--row {
    top: calc(12.5% + (34.767% * (var(--position-multiplier) - 1)));
    left: 50%;
    transform: translateX(-50%);
}

.board__line--col {
    left: calc(12.5% + (34.767% * (var(--position-multiplier) - 1)));
    top: 50%;
    transform: translateY(-50%);
}

.board__line--diag {
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%) rotate(calc(90deg * (var(--position-multiplier) - 1)));
}

.scoreboard {
    display: grid;
    grid-template-rows: repeat(2, 1fr);
    grid-template-columns: repeat(2, 1fr);
    justify-items: center;
    margin-top: 30px;
    text-align: center;
    width: min(60vmin, 500px);
    height: min(20vmin, 200px);
}

.scoreboard > * {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 75%;
    height: 75%;
}

/* -------------------- */
/* State                */
/* -------------------- */

/* -------------------- */
/* Theme                */
/* -------------------- */

.primary-theme {
    background-color: hsl( var(--primary-clr) );
    font-family: var(--ff-site);
}

.banner {
    background-color: hsl( var(--accent-clr) );
    color: hsl( var(--secondary-clr) );
}

/* tic tac toe board borders */
.board {
    background-color: hsl( var(--secondary-clr) );
    font-family: var(--ff-board);
    font-size: var(--fs-board);
    font-weight: bold;
}

.board__cell {
    outline: var(--board-border);
}

.social-link > * {
    color: hsl(var(--primary-clr) );
    padding: 1rem;
    transition: .5s;
}

@media (hover: hover) {
    .social-link > *:hover {
        color: hsl(var(--secondary-clr) );
        transform: scale(1.2);
    }
}

/* -------------------- */
/* Animations           */
/* -------------------- */

.shrink {
    transform: scale(.75);
    transition: var(--total-anim-duration);
    transition-delay: calc(var(--total-anim-duration) / 2);
}

/* requires JS defined --shape-length and --delay=multiplier */
.draw {
    --piece-anim-duration: calc(var(--total-anim-duration) / var(--shape-pieces));
    stroke-dasharray: var(--shape-length);
    stroke-dashoffset: var(--shape-length);
    animation-name: draw;
    animation-duration: var(--piece-anim-duration);
    animation-timing-function: ease-in-out;
    animation-delay: calc(var(--delay-multiplier) * var(--piece-anim-duration));
    animation-fill-mode: forwards;
}

.fade-out {
    animation: fade-out .75s linear calc( var(--total-anim-duration) * 2 ) 1 normal forwards;
}

@keyframes fade-out {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

@keyframes draw {
    from {
        stroke-dashoffset: var(--shape-length);
    }

    to {
        stroke-dashoffset: 0;
    }
}